name: Auto Merge Approved PRs (Disabled - Using Scheduled Deploy)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: false # Disabled - using scheduled deployment instead

    steps:
      - name: Check PR title
        run: |
          if [[ "${{ github.event.pull_request.title }}" != *"Auto-deploy: Preview → Main"* ]]; then
            echo "PR title doesn't match expected pattern. Exiting."
            exit 1
          fi
          echo "PR title matches expected pattern. Continuing."

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run final build check
        run: pnpm run build

      - name: Auto merge PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            // Handle different mergeable states
            if (pr.mergeable_state === 'behind') {
              console.log('PR is behind base branch, updating...');
              await github.rest.pulls.updateBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
              });
              
              // Wait for the update to complete and recheck
              await new Promise(resolve => setTimeout(resolve, 10000));
              
              // Re-fetch PR status after update
              const { data: updatedPr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
              });
              
              if (updatedPr.mergeable && updatedPr.mergeable_state === 'clean') {
                await github.rest.pulls.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number,
                  merge_method: 'squash',
                  commit_title: `Deploy: ${updatedPr.title.replace(/Auto-deploy: Preview → Main \(.*\)/, '')}`,
                  commit_message: `Auto-merge from preview branch\n\nPR #${updatedPr.number}\nCloses #${updatedPr.number}`
                });
                console.log('PR updated and merged successfully!');
              } else {
                console.log('PR still not ready to merge after update:', updatedPr.mergeable_state);
              }
            } else if (pr.mergeable && pr.mergeable_state === 'clean') {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                merge_method: 'squash',
                commit_title: `Deploy: ${pr.title.replace(/Auto-deploy: Preview → Main \(.*\)/, '')}`,
                commit_message: `Auto-merge from preview branch\n\nPR #${pr.number}\nCloses #${pr.number}`
              });
              
              console.log('PR merged successfully!');
            } else {
              console.log('PR is not ready to merge:', pr.mergeable_state);
            }

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `## ✅ Auto-merge completed!

              This PR has been automatically merged to \`main\` and will trigger a production deployment.

              **Next steps:**
              - Vercel will automatically deploy the changes
              - Monitor the deployment status in your Vercel dashboard
              - The preview branch is now ready for the next set of changes

              ---
              *This merge was performed automatically by GitHub Actions*`
            });
